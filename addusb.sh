#!/bin/bash

########################################################################
### DO NOT EDIT THIS FILE TO CHANGE THE CONFIG!!!                    ###
### ---------------------------------------------------------------- ###
### Este script sirve para coger los USB's del equipo y hacerles     ###
### reconocibles por la maquina, lo que coge es el IdVendor,         ###
### idProduct y el Serial.                                           ###
### Hay que tener cuidado ya que algunos idProduct y el IdVendor     ###
### pueden ser identicos a otros USB, y el Serial puede coger el     ###
### otro serial del puerto si no funciona es por eso                 ###
########################################################################

#
#Colores
#
greenColour="\e[0;32m\033[1m"
endColour="\033[0m\e[0m"
redColour="\e[0;31m\033[1m"
blueColour="\e[0;34m\033[1m"
yellowColour="\e[0;33m\033[1m"
purpleColour="\e[0;35m\033[1m"
turquoiseColour="\e[0;36m\033[1m"
grayColour="\e[0;37m\033[1m"

#
#Trenecito
#
#sl

#
#Si el script da algun error cerrara el script
#
#set -e

#
#Dice Saliendo...
#
function goodbye() {
    # say goodbye
    echo -e "\n\n${purpleColour}[+]${endColour} Saliendo...\n"
}

#
#Cuando das control+C sale del programa
#
trap "goodbye" EXIT

#
#Variables
#
automatico="Automatico"
manual="Manual"
puertoUSB="Utilizar Puerto USB"

#
#Pregunta al usuario si quiere seleccionar guardar una impresora o una camara
#
clear
echo -e "Que quiere guardar una ${greenColour}Impresora${endColour} o una ${redColour}Camara${endColour}"
select yn in "Impresora" "Camara" "Salir"; do
	case $yn in

#
#Pregunta al usuario el modo del programa Automatico, Manual o Salir
#
Impresora )
clear
echo -e "${greenColour}[+]${endColour} Acabas de elegir añadir una ${greenColour}Impresora${endColour}"
sleep 2
clear
echo -e "Por favor, seleccione un modo ${turquoiseColour}Automatico${endColour}, ${yellowColour}Manual${endColour} o ${redColour}Salir${endColour} [${turquoiseColour}1${endColour}/${yellowColour}2${endColour}/${redColour}3${endColour}]"

select yn in "Automatico" "$manual" "Salir"; do
    case $yn in

#
#Modo Manual
#
       $manual )
		clear
        echo -e "Acabas de elegir el modo ${yellowColour}Manual${endColour} este modo es para si no funciona el ${redColour}Serial${endColour}, lo eligas tu"
		sleep 2
		clear

#
#Manda desconectar el dispositivo
#
echo -e "Por favor, desconecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
select yn in "Siguiente" "Salir"; do
	 case $yn in
	Siguiente ) clear
		echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"
		sleep 1
		clear
		ls /dev > /home/abadia/.USB/lista-pre.txt

#
#Manda conectar el dispositivo
#
		echo -e "Por favor, conecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
		select yn in "Siguiente" "Salir"; do
    		case $yn in
      	Siguiente ) clear
			echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"

#
#Configuracion del script Manual (No Tocar)
#
sleep 1
clear
ls /dev > /home/abadia/.USB/lista-des.txt
sleep 1
diff /home/abadia/.USB/lista-pre.txt /home/abadia/.USB/lista-des.txt > /home/abadia/.USB/lista-diff
sleep 1
echo -e "${greenColour}[+]${endColour} Este es el numero del USB a añadir"
tty=$(cat /home/abadia/.USB/lista-diff | grep 'tty' | head -n1 | awk '{print $2}')
sleep 1
clear
echo -e "Avanzando con $tty"
sleep 1

#
#Coge variables idVendor e idProduct
#
idVendor=$(udevadm info -a -n /dev/$tty | grep '{idVendor}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
idProduct=$(udevadm info -a -n /dev/$tty | grep '{idProduct}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
clear
echo -e "${purpleColour}[+]${endColour} Ahora te tocara elegir cual de los 2 seriales se va a añadir"
sleep 1

#
#Coge los dos seriales a mostrar al usuario
#
seriala=$(udevadm info -a -n /dev/$tty | grep '{serial}' | head -n1 | awk 'BEGIN{FS=" "; OFS=""} {print $1}')
serialb=$(udevadm info -a -n /dev/$tty | grep '{serial}' | tail -n1 | awk 'BEGIN{FS=" "; OFS=""} {print $1}')

#
#Coge el Kernel del dispositivo
#
mkdir -p /etc/.kernel/.USB 2>/dev/null
udevadm info -a -n /dev/$tty | grep 'KERNELS' | awk 'BEGIN{FS=" "; OFS=""} {print $1}' > /etc/.kernel/.USB/kernel.txt
kernel=$(sed -n 2p /etc/.kernel/.USB/kernel.txt)

#
#Selecciona el usuario la variable serial al gusto
#
echo -e "A continuacion saldran en pantalla, los seriales a elegir, tambien, tendras una opcion en la que podras avanzar utilizando el bus del dispositivo, si utilizas esta opcion, no se podra ${redColour}MOVER${endColour} el puerto USB${yellowColour}(No recomendada)${endColour}, ${turquoiseColour}$seriala${endColour}, ${greenColour}$serialb${endColour}, ${yellowColour}$puertoUSB${endColour} y ${redColour}Salir${endColour} [${turquoiseColour}1${endColour}/${yellowColour}2${endColour}/${yellowColour}3${endColour}/${redColour}4${endColour}]"
select yn in "$seriala" "$serialb" "$puertoUSB" "Salir"; do
    case $yn in

$seriala ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${turquoiseColour}$seriala${endColour}}"
sleep 2

#
#Nombre de la impresora a llamar $seriala
#
read -p "Introduce el nombre del dispositivo: " nombre
	if [ "$nombre" != "" ]
		then
			echo -e "Avanzando con ${redColour}$nombre${endColour}"
			sleep 1

#
#Actualiza los cambios en la carpeta de rules.d
#
			echo -e 'SUBSYSTEM=="tty", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$seriala', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
			mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
			mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
		echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
sleep 1
clear

#
#Desconecta el usuario el disposivo y lo vuelve a conectar
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
	select yn in "Siguiente" "Salir"; do
	case $yn in
       Siguiente )
comprobar1=$(ls /dev | grep $nombre)
			echo -e "Tu dispositivo es ${redColour}$comprobar1${endColour}"
sleep 1
clear
            echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
       sleep 1
exit 1
;;

#
#Cierra la pregunta de desconectar y conectar el dispositivo
#
		Salir )
                 echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
           exit 1;;
       esac
   done


#
#Cierra la pregunta de nombre de dispositivo
#
else
       echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
       exit 1
   fi
   break
;;

#
#Respuesta Serial2
#
$serialb ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${yellowColour}$serialb${endColour}"
sleep 2

#
#Nombre de la impresora a llamar $serial2
#
read -p "Introduce el nombre del dispositivo: " nombre
	if [ "$nombre" != "" ]
	then
		echo -e "Avanzando con ${redColour}$nombre${endColour}"
		sleep 1

#
#Pone las variables y actualiza el directorio rules.d
#
	echo -e 'SUBSYSTEM=="tty", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$serialb', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
		mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
		mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
		echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
	sleep 1
clear

#
#Manda conectar y desconectar al usuario el dispositivo
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
select yn in "Siguiente" "Salir"; do
    case $yn in
       Siguiente )
comprobar=$(ls /dev | grep ttyUSB-$nombre)
echo -e "Tu dispositivo es ${redColour}$comprobar${endColour}"
sleep 1
clear
                echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
        sleep 1
exit 1
;;

#
#Cierra el desconectar y conectar el dispositivo
#
	   Salir )
               echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
           exit 1;;
       esac
   done

#
#Cierra la pregunta de nombre del usuario de serialb
#
else
        echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
        exit 1
    fi
    break
;;

#
#Abre la opcion kernel
#
$puertoUSB ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${yellowColour}$puertoUSB${endColour}"
sleep 1
echo -e "${greenColour}[+]${endColour} Recuerda que esta opcion, ${redColour}SOLO${endColour} funcionara con el puerto USB en el que este conectada la camara, si la cambias de puerto USB, ${redColour}NO${endColour} funcionara"
sleep 2
clear

#
#Nombre de la camara a llamar
#
read -p "Introduce el nombre del dispositivo: " nombre
    if [ "$nombre" != "" ]
    then
         echo -e "Avanzando con ${redColour}$nombre${endColour}"
         sleep 1

#
#Pone las variables y actualiza el directorio rules.d
#
    echo -e 'SUBSYSTEM=="tty", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$kernel', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
        mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
        mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
        echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
    sleep 1
clear

#
#Manda conectar y desconectar al usuario el dispositivo
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
select yn in "Siguiente" "Salir"; do
    case $yn in
      Siguiente )
comprobar=$(ls /dev | grep $nombre)
echo -e "Tu dispositivo es ${redColour}$comprobar${endColour}"
sleep 1
clear
               echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
       sleep 1
exit 1
;;

#
#Cierra el desconectar y conectar el dispositivo
#
       Salir )
               echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
       esac
   done

#
#Cierra la pregunta de nombre de dispositivo
#
else
       echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
      exit 1
   fi
   break
;;

#
#Cierra los Seriales y el Kernel
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
    done
;;

#
#Cierra cuando manda al usuario conectar el dispositivo
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
     done
;;

#
#Cierra cuando manda al usuario desconectar el dispositivo
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
     done
;;

#
#Modo Automatico
#
Automatico )
               echo -e "${redColour}[-]${endColour} Cerrando Script..."
 clear
		echo -e "${greenColour}[+]${endColour} Perfecto, acabas de elegir Automatico, continuemos con el script"
		sleep 2
clear

#
#Manda desconectar al usuario el dispostivo
#
echo -e "Por favor, desconecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
  select yn in "Siguiente" "Salir"; do
       case $yn in
  Siguiente ) clear

ls /dev > /home/abadia/.USB/lista-pre.txt

#
#Manda conectar el dispositivo al usuario
#
echo -e "Por favor, conecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"

select yn in "Siguiente" "Salir"; do
     case $yn in
        Siguiente ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"

#
#Configuracion del script Automatico (No Tocar)
#
sleep 1
clear
ls /dev > /home/abadia/.USB/lista-des.txt
sleep 1
diff /home/abadia/.USB/lista-pre.txt /home/abadia/.USB/lista-des.txt > /home/abadia/.USB/lista-diff
sleep 1

echo -e "${greenColour}[+]${endColour} Este es el numero del USB a añadir"
tty=$(cat /home/abadia/.USB/lista-diff | grep 'tty' | head -n1 | awk '{print $2}')
sleep 1
clear
 echo -e "Avanzando con ${redColour}$tty${endColour}"
 sleep 1

#
#Coge las variables idVendor, idProduct, serial
#
idVendor=$(udevadm info -a -n /dev/$tty | grep '{idVendor}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
#| sed -e 's/"//g')
idProduct=$(udevadm info -a -n /dev/$tty | grep '{idProduct}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
serial=$(udevadm info -a -n /dev/$tty | grep '{serial}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
sleep 2

#
#Nombre de la impresora a llamar
#
read -p "Introduce el nombre del dispositivo: " nombre
if [ "$nombre" != "" ]
then
echo -e "Avanzando con $nombre"
sleep 1

#Mete los datos en rules.d y actualiza el directorio
echo -e 'SUBSYSTEM=="tty", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', ATTRS{serial}=='$serial', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
ls /dev | ttyUSB-$nombre
sleep 1
clear

#
#Manda desconectar y conectar el dispositivo al usuario
#
echo -e "Por favor, desconecte y conecte los ${redColour}dispositios${endColour} para que el script funcione correctamente"

select yn in "Siguiente" "Salir"; do
    case $yn in
       Siguiente )
bicho=$(ls /dev | grep $nombre)
clear
				echo -e "Este es tu dispostivo ${redColour}$bicho${endColour}"
                echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
        sleep 1
exit 1;;

#
#Cierra el desconectar y conectar modo Automatico
#
Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
         exit 1;;
     esac
 done

#
#Cierra el nombre del dispositivo modo Automatico
#
else
      echo -e "\n${redColour}[+]${endColour} Cerrando Script"
      exit 1
   fi
   break
;;

#
#Cierra el modo conecta el dispositivo modo Automatico
#
Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
         exit 1;;
     esac
 done
;;

#
#Cierra el modo desconecta el dispositivo modo Automatico
#
 Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
      esac
 done
;;
#
#Cierra el Salir de la pregunta modo Automatico, Manual o Salir
#
Salir )
               echo -e "${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
		esac
 done
;;


#
#Pregunta al usuario el modo del programa Automatico, Manual o Salir
#
Camara )
clear
echo -e "${greenColour}[+]${endColour} Acabas de elegir añadir una ${redColour}Camara${endColour}"
sleep 2
clear
echo -e "Por favor, seleccione un modo ${turquoiseColour}Automatico${endColour}, ${yellowColour}Manual${endColour} o ${redColour}Salir${endColour} [${turquoiseColour}1${endColour}/${yellowColour}2${endColour}/${redColour}3${endColour}]"

select yn in "Automatico" "$manual" "Salir"; do
    case $yn in

#
#Modo Manual
#
       $manual )
		clear
        echo -e "Acabas de elegir el modo ${yellowColour}Manual${endColour} este modo es para si no funciona el ${redColour}Serial${endColour}, lo eligas tu"
		sleep 2
		clear

#
#Manda desconectar el dispositivo
#
echo -e "Por favor, desconecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
select yn in "Siguiente" "Salir"; do
	 case $yn in
	Siguiente ) clear
		echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"
		sleep 1
		clear
		ls /dev > /home/abadia/.USB/lista-pre.txt

#
#Manda conectar el dispositivo
#
		echo -e "Por favor, conecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
		select yn in "Siguiente" "Salir"; do
    		case $yn in
      	Siguiente ) clear
			echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"

#
#Configuracion del script Manual (No Tocar)
#
sleep 1
clear
ls /dev > /home/abadia/.USB/lista-des.txt
sleep 1
diff /home/abadia/.USB/lista-pre.txt /home/abadia/.USB/lista-des.txt > /home/abadia/.USB/lista-diff
sleep 1
echo -e "${greenColour}[+]${endColour} Este es el numero del USB a añadir"
tty=$(cat /home/abadia/.USB/lista-diff | grep 'video' | head -n1 | awk '{print $2}')
sleep 1
clear
echo -e "Avanzando con $tty"
sleep 1

#
#Coge variables idVendor e idProduct
#
idVendor=$(udevadm info -a -n /dev/$tty | grep '{idVendor}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
idProduct=$(udevadm info -a -n /dev/$tty | grep '{idProduct}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
clear
echo -e "${purpleColour}[+]${endColour} Ahora te tocara elegir cual de los 2 seriales se va a añadir"
sleep 1

#
#Coge los dos seriales a mostrar al usuario
#
seriala=$(udevadm info -a -n /dev/$tty | grep '{serial}' | head -n1 | awk 'BEGIN{FS=" "; OFS=""} {print $1}')
serialb=$(udevadm info -a -n /dev/$tty | grep '{serial}' | tail -n1 | awk 'BEGIN{FS=" "; OFS=""} {print $1}')

#
#Coge el Kernel del dispositivo
#
mkdir -p /etc/.kernel/.USB 2>/dev/null
udevadm info -a -n /dev/$tty | grep 'KERNELS' | awk 'BEGIN{FS=" "; OFS=""} {print $1}' > /etc/.kernel/.USB/kernel.txt
kernel=$(sed -n 2p /etc/.kernel/.USB/kernel.txt)

#
#Selecciona el usuario la variable serial al gusto
#
echo -e "A continuacion saldran en pantalla, los seriales a elegir, tambien, tendras una opcion en la que podras avanzar utilizando el bus del dispositivo, si utilizas esta opcion, no se podra ${redColour}MOVER${endColour} el puerto USB${yellowColour}(No recomendada)${endColour}, ${turquoiseColour}$seriala${endColour}, ${greenColour}$serialb${endColour}, ${yellowColour}$puertoUSB${endColour} y ${redColour}Salir${endColour} [${turquoiseColour}1${endColour}/${yellowColour}2${endColour}/${yellowColour}3${endColour}/${redColour}4${endColour}]"
select yn in "$seriala" "$serialb" "$puertoUSB" "Salir"; do
     case $yn in

 $seriala ) clear
 echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${turquoiseColour}$seriala${endColour}}"
sleep 2

#
#Nombre de la impresora a llamar $seriala
#
read -p "Introduce el nombre del dispositivo: " nombre
	if [ "$nombre" != "" ]
		then
			echo -e "Avanzando con ${redColour}$nombre${endColour}"
			sleep 1

#
#Actualiza los cambios en la carpeta de rules.d
#
			echo -e 'SUBSYSTEM=="video4linux", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$seriala', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
			mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
			mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
		echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
sleep 1
clear

#
#Desconecta el usuario el disposivo y lo vuelve a conectar
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
	select yn in "Siguiente" "Salir"; do
	case $yn in
       Siguiente )
comprobar1=$(ls /dev | grep $nombre)
			echo -e "Tu dispositivo es ${redColour}$comprobar1${endColour}"
sleep 1
clear
            echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
       sleep 1
exit 1
;;

#
#Cierra la pregunta de desconectar y conectar el dispositivo
#
		Salir )
                 echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
           exit 1;;
       esac
   done


#
#Cierra la pregunta de nombre de dispositivo
#
else
       echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
       exit 1
   fi
   break
;;

#
#Respuesta Serial2
#
$serialb ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${yellowColour}$serialb${endColour}"
sleep 2

#
#Nombre de la impresora a llamar $serial2
#
read -p "Introduce el nombre del dispositivo: " nombre
	if [ "$nombre" != "" ]
	then
		echo -e "Avanzando con ${redColour}$nombre${endColour}"
		sleep 1

#
#Pone las variables y actualiza el directorio rules.d
#
	echo -e 'SUBSYSTEM=="video4linux", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$serialb', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
		mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
		mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
		echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
	sleep 1
clear

#
#Manda conectar y desconectar al usuario el dispositivo
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
select yn in "Siguiente" "Salir"; do
    case $yn in
       Siguiente )
comprobar=$(ls /dev | grep $nombre)
echo -e "Tu dispositivo es ${redColour}$comprobar${endColour}"
sleep 1
clear
                echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
        sleep 1
exit 1
;;

#
#Cierra la pregunta de desconectar y conectar el dispositivo
#
        Salir )
                 echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
           exit 1;;
       esac
   done

#
#Cierra la pregunta de nombre de dispositivo
#
else
       echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
       exit 1
  fi
   break
;;

#
#Abre la opcion kernel
#
$puertoUSB ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, has elegido ${yellowColour}$puertoUSB${endColour}"
sleep 1
echo -e "${greenColour}[+]${endColour} Recuerda que esta opcion, ${redColour}SOLO${endColour} funcionara con el puerto USB en el que este conectada la camara, si la cambias de puerto USB, ${redColour}NO${endColour} funcionara"
sleep 2
clear

#
#Nombre de la camara a llamar
#
read -p "Introduce el nombre del dispositivo: " nombre
	if [ "$nombre" != "" ]
     then
		 echo -e "Avanzando con ${redColour}$nombre${endColour}"
         sleep 1

#
#Pone las variables y actualiza el directorio rules.d
#
    echo -e 'SUBSYSTEM=="video4linux", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', '$kernel', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
        mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
        mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
        echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
    sleep 1
clear

#
#Manda conectar y desconectar al usuario el dispositivo
#
echo -e "Por favor, desconecte y conecte el ${redColour}dispositivo${endColour} para que el script funcione correctamente"
select yn in "Siguiente" "Salir"; do
    case $yn in
       Siguiente )
comprobar=$(ls /dev | grep $nombre)
echo -e "Tu dispositivo es ${redColour}$comprobar${endColour}"
sleep 1
clear
                echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
        sleep 1
exit 1
;;

#
#Cierra el desconectar y conectar el dispositivo
#
	   Salir )
               echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
           exit 1;;
       esac
   done

#Cierra la pregunta de nombre de dispositivo
#
else
       echo -e "\n${redColour}[+]${endColour} Cerrando Script..."
       exit 1
   fi
   break
;;


#
#Cierra los Seriales y el Kernel
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
    done
;;

#
#Cierra cuando manda al usuario conectar el dispositivo
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
     done
;;

#
#Cierra cuando manda al usuario desconectar el dispositivo
#
   Salir )
                echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
            exit 1;;
        esac
     done
;;

#
#Modo Automatico
#
Automatico )
               echo -e "${redColour}[-]${endColour} Cerrando Script..."
 clear
		echo -e "${greenColour}[+]${endColour} Perfecto, acabas de elegir Automatico, continuemos con el script"
		sleep 2
clear

#
#Manda desconectar al usuario el dispostivo
#
echo -e "Por favor, desconecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"
  select yn in "Siguiente" "Salir"; do
       case $yn in
  Siguiente ) clear

ls /dev > /home/abadia/.USB/lista-pre.txt

#
#Manda conectar el dispositivo al usuario
#
echo -e "Por favor, conecte el ${redColour}dispositivo${endColour} a indentificar [1/2]"

select yn in "Siguiente" "Salir"; do
     case $yn in
        Siguiente ) clear
echo -e "${greenColour}[+]${endColour} Perfecto, continuemos con el script"

#
#Configuracion del script Automatico (No Tocar)
#
sleep 1
clear
ls /dev > /home/abadia/.USB/lista-des.txt
sleep 1
diff /home/abadia/.USB/lista-pre.txt /home/abadia/.USB/lista-des.txt > /home/abadia/.USB/lista-diff
sleep 1

echo -e "${greenColour}[+]${endColour} Este es el numero de la camara a añadir"
tty=$(cat /home/abadia/.USB/lista-diff | grep 'video' | head -n1 | awk '{print $2}')
sleep 1
clear
 echo -e "Avanzando con ${redColour}$tty${endColour}"
 sleep 1

#
#Coge las variables idVendor, idProduct, serial
#
idVendor=$(udevadm info -a -n /dev/$tty | grep '{idVendor}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
#| sed -e 's/"//g')
idProduct=$(udevadm info -a -n /dev/$tty | grep '{idProduct}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
serial=$(udevadm info -a -n /dev/$tty | grep '{serial}' | head -n1 | awk 'BEGIN{FS="="; OFS=" "} {print $3}')
sleep 2

#
#Nombre de la impresora a llamar
#
read -p "Introduce el nombre del dispositivo: " nombre
if [ "$nombre" != "" ]
then
echo -e "Avanzando con $nombre"
sleep 1

#Mete los datos en rules.d y actualiza el directorio
echo -e 'SUBSYSTEM=="video4linux", ATTRS{idVendor}=='$idVendor', ATTRS{idProduct}=='$idProduct', ATTRS{serial}=='$serial', SYMLINK+="'$nombre'";' >> /etc/udev/rules.d/99-usb-serial.rules
mv /etc/udev/rules.d/99-usb-serial.rules /etc/udev/rules.d/99-usb-serial.ruless
mv /etc/udev/rules.d/99-usb-serial.ruless /etc/udev/rules.d/99-usb-serial.rules
echo -e "${greenColour}[+]${endColour} Dispositivo añadido correctamente"
ls /dev | $nombre
sleep 1
clear

#
#Manda desconectar y conectar el dispositivo al usuario
#
echo -e "Por favor, desconecte y conecte los ${redColour}dispositios${endColour} para que el script funcione correctamente"

select yn in "Siguiente" "Salir"; do
    case $yn in
       Siguiente )
bicho=$(ls /dev | grep $nombre)
clear
				echo -e "Este es tu dispostivo ${redColour}$bicho${endColour}"
                echo -e "${greenColour}[+]${endColour} Perfecto, ya esta todo en orden"
        sleep 1
exit 1;;

#
#Cierra el desconectar y conectar modo Automatico
#
Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
         exit 1;;
     esac
 done

#
#Cierra el nombre del dispositivo modo Automatico
#
else
      echo -e "\n${redColour}[+]${endColour} Cerrando Script"
      exit 1
   fi
   break
;;

#
#Cierra el modo conecta el dispositivo modo Automatico
#
Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
         exit 1;;
     esac
 done
;;

#
#Cierra el modo desconecta el dispositivo modo Automatico
#
 Salir )
              echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
      esac
 done
;;
#
#Cierra el Salir de la pregunta modo Automatico, Manual o Salir
#
Salir )
               echo -e "${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
		esac
 done
;;



#
#Cierra el Salir de la pregunta entre Impresora y Webcam
#
Salir )
               echo -e "\n${redColour}[-]${endColour} Cerrando Script..."
          exit 1;;
      esac
 done

;;
